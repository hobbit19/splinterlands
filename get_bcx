#function for getting BCX from XP. details is an api response from the card ID

def get_bcx(details):
        bcx_dict = {0: {1: 20, 2: 100, 3: 250, 4: 1000}, 1: {1: 15, 2: 75, 3: 175, 4: 750}}
        gold_bcx_dict = {0: {1: 250, 2: 500, 3: 1000, 4: 2500}, 1: {1: 200, 2: 400, 3: 800, 4: 2000}}
        if details['gold']:
                if details['edition'] == 1 or details ['edition'] == 3:
                        return details['xp']/gold_bcx_dict[1][details['details']['rarity']]
                if details['edition'] == 0:
                        return details['xp']/gold_bcx_dict[0][details['details']['rarity']]
                if details['edition'] == 2 and details['card_detail_id'] > 100:
                        return details['xp']/gold_bcx_dict[1][details['details']['rarity']]
                if details['edition'] == 2 and details['card_detail_id'] < 100:
                        return details['xp']/gold_bcx_dict[0][details['details']['rarity']]
        if details['edition'] == 1 or details ['edition'] == 3:
                return details['xp']/bcx_dict[1][details['details']['rarity']] + 1
        if details['edition'] == 0:
                return details['xp']/bcx_dict[0][details['details']['rarity']] + 1
        if details['edition'] == 2 and details['card_detail_id'] > 100:
                return details['xp']/bcx_dict[1][details['details']['rarity']] + 1
        if details['edition'] == 2 and details['card_detail_id'] < 100:
                return details['xp']/bcx_dict[0][details['details']['rarity']] + 1

